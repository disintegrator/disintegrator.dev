---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

import H1 from "../components/H1.astro";
import H2 from "../components/H2.astro";
import Link from "../components/Link.astro";
import OL from "../components/OL.astro";
import UL from "../components/UL.astro";
import BlockQuote from "../components/BlockQuote.astro";
import P from "../components/P.astro";
import HeroImage from "../components/HeroImage.astro";
import Layout, { Props as LayoutProps } from "./Layout.astro";
import Tip from "../components/Tip.astro";
import H3 from "../components/H3.astro";
import { generateTableOfContents } from "../components/tocHelpers";
import TableOfContents from "../components/TableOfContents.astro";
import SiteNav from "../components/SiteNav.astro";
import HR from "../components/HR.astro";
import ImageLink from "../components/ImageLink.astro";

export interface Props extends Omit<LayoutProps, "title" | "description"> {
	entry: CollectionEntry<"posts">;
	ogImage: string | null;
}

const { entry, ogImage, ...rest } = Astro.props as Props;
const { Content, headings } = await entry.render();
const tocTree = generateTableOfContents(headings);
---

<Layout {...rest} title={entry.data.title} description={entry.data.summary}>
	{
		ogImage ? (
			<meta slot="head" name="image" property="og:image" content={ogImage} />
		) : null
	}
	{
		ogImage ? (
			<meta slot="head" name="twitter:card" content="summary_large_image" />
		) : null
	}
	<meta slot="head" property="og:title" content={entry.data.title} />
	<meta slot="head" name="twitter:title" content={entry.data.title} />
	<meta slot="head" property="og:description" content={entry.data.summary} />
	<meta slot="head" name="twitter:description" content={entry.data.summary} />
	<meta slot="head" property="og:type" content="article" />

	<div class="sr-only" id="back-to-top">Top of page</div>
	<div
		class:list={[
			"grid",
			"auto-rows-max lg:auto-rows-auto",
			"grid-cols-1 lg:grid-cols-12",
			"min-h-screen",
		]}
	>
		<div
			class:list={[
				"col-span-full lg:col-span-2",
				"px-6 pt-6 pb-3 lg:pb-6",
				"border-b lg:border-b-0 lg:border-r",
				"border-dotted",
				"border-orange-400",
			]}
		>
			<SiteNav />
		</div>
		<div class="col-span-full lg:col-span-6 xl:col-span-8 mb-10">
			<article class="mx-auto lg:mx-0 max-w-prose p-6">
				<H1>{entry.data.title}</H1>
				<Content
					components={{
						blockquote: BlockQuote,
						p: P,
						h2: H2,
						h3: H3,
						a: Link,
						ol: OL,
						ul: UL,
						hr: HR,
						HeroImage,
						ImageLink,
						Image,
						Link,
						Tip,
					}}
				/>
			</article>

			{
				entry.data.bluesky ? (
					<nav class="mx-auto lg:mx-0 max-w-prose p-6 border-t border-neutral-300 dark:border-neutral-800">
						<Link class="font-medium" href={entry.data.bluesky}>
							Discuss on Bluesky
						</Link>
					</nav>
				) : null
			}
		</div>
		<aside
			class:list={[
				"hidden lg:block",
				"relative",
				"col-span-full lg:col-span-3 xl:col-span-2",
			]}
		>
			<nav class="sticky top-0 p-6" aria-label="Table of contents">
				<TableOfContents items={tocTree} />
			</nav>
		</aside>
	</div>
</Layout>
